package dynamicc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAssignment = createDescriptorForAssignment();
  /*package*/ final ConceptDescriptor myConceptCCodeBlock = createDescriptorForCCodeBlock();
  /*package*/ final ConceptDescriptor myConceptCast = createDescriptorForCast();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptFunction = createDescriptorForFunction();
  /*package*/ final ConceptDescriptor myConceptFunctionParameter = createDescriptorForFunctionParameter();
  /*package*/ final ConceptDescriptor myConceptInt10LiteralConcept = createDescriptorForInt10LiteralConcept();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptNewlineStatement = createDescriptorForNewlineStatement();
  /*package*/ final ConceptDescriptor myConceptSingleLineComment = createDescriptorForSingleLineComment();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptValVariable = createDescriptorForValVariable();
  /*package*/ final ConceptDescriptor myConceptVarVariable = createDescriptorForVarVariable();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptVariableAccess = createDescriptorForVariableAccess();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeInt10Literal = new ConstrainedStringDatatypeDescriptorImpl(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x45b716564ae56560L, "Int10Literal", "r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/5023508469234623840", "\d");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAssignment, myConceptCCodeBlock, myConceptCast, myConceptExpression, myConceptFunction, myConceptFunctionParameter, myConceptInt10LiteralConcept, myConceptModule, myConceptNewlineStatement, myConceptSingleLineComment, myConceptStatement, myConceptType, myConceptValVariable, myConceptVarVariable, myConceptVariable, myConceptVariableAccess);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Assignment:
        return myConceptAssignment;
      case LanguageConceptSwitch.CCodeBlock:
        return myConceptCCodeBlock;
      case LanguageConceptSwitch.Cast:
        return myConceptCast;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.Function:
        return myConceptFunction;
      case LanguageConceptSwitch.FunctionParameter:
        return myConceptFunctionParameter;
      case LanguageConceptSwitch.Int10LiteralConcept:
        return myConceptInt10LiteralConcept;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.NewlineStatement:
        return myConceptNewlineStatement;
      case LanguageConceptSwitch.SingleLineComment:
        return myConceptSingleLineComment;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.ValVariable:
        return myConceptValVariable;
      case LanguageConceptSwitch.VarVariable:
        return myConceptVarVariable;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      case LanguageConceptSwitch.VariableAccess:
        return myConceptVariableAccess;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeInt10Literal);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Assignment", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22aedd030L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819678171184");
    b.version(2);
    b.aggregate("expression", 0x26ea02d22aedd033L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L).optional(false).ordered(true).multiple(true).origin("2804056819678171187").done();
    b.aggregate("variables", 0x45b716564adf2d6fL).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22aef02d4L).optional(false).ordered(true).multiple(true).origin("5023508469234216303").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCCodeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "CCodeBlock", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22ae8452fL);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819677807919");
    b.version(2);
    b.property("code_block", 0x26ea02d22ae84530L).type(PrimitiveTypeId.STRING).origin("2804056819677807920").done();
    b.alias("$");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCast() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Cast", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22aedb9e6L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Expression", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819678165478");
    b.version(2);
    b.associate("type", 0x26ea02d22aedb9e9L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c33L).optional(false).origin("2804056819678165481").done();
    b.aggregate("expression", 0x26ea02d22aedd9c8L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L).optional(false).ordered(true).multiple(false).origin("2804056819678173640").done();
    b.alias("as");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Expression", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L);
    b.class_(false, true, false);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027744283444");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Function", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22ae503deL);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819677594590");
    b.version(2);
    b.property("hasReturnType", 0x26ea02d22ae5074dL).type(PrimitiveTypeId.BOOLEAN).origin("2804056819677595469").done();
    b.associate("returnType", 0x26ea02d22ae5f4d2L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c33L).optional(true).origin("2804056819677656274").done();
    b.aggregate("parameters", 0x26ea02d22ae503e3L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22ae503eaL).optional(true).ordered(true).multiple(true).origin("2804056819677594595").done();
    b.aggregate("statements", 0x26ea02d22ae503e1L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL).optional(true).ordered(true).multiple(true).origin("2804056819677594593").done();
    b.alias("fun");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "FunctionParameter", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22ae503eaL);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Variable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c2eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819677594602");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInt10LiteralConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Int10LiteralConcept", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x45b716564ae56561L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Expression", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/5023508469234623841");
    b.version(2);
    b.property("literal", 0x45b716564ae56562L).type(MetaIdFactory.dataTypeId(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x45b716564ae56560L)).origin("5023508469234623842").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Module", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027743824669");
    b.version(2);
    b.property("module", 0x3a6fd2de0c312b29L).type(PrimitiveTypeId.STRING).origin("4210816027743824681").done();
    b.aggregate("statements", 0x3a6fd2de0c312b39L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL).optional(true).ordered(true).multiple(true).origin("4210816027743824697").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewlineStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "NewlineStatement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c342652L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027744020050");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingleLineComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "SingleLineComment", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22af0da98L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819678370456");
    b.version(2);
    b.property("comment", 0x26ea02d22af0da99L).type(PrimitiveTypeId.STRING).origin("2804056819678370457").done();
    b.alias("//");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.class_(false, true, false);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027743824667");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Type", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c33L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027743968307");
    b.version(2);
    b.property("strong", 0x3a6fd2de0c335c36L).type(PrimitiveTypeId.BOOLEAN).origin("4210816027743968310").done();
    b.property("c_type", 0x26ea02d22addb9f2L).type(PrimitiveTypeId.STRING).origin("2804056819677116914").done();
    b.property("is_c_type", 0x26ea02d22ade0a1eL).type(PrimitiveTypeId.BOOLEAN).origin("2804056819677137438").done();
    b.associate("parent", 0x3a6fd2de0c335c38L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c33L).optional(true).origin("4210816027743968312").done();
    b.alias("type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "ValVariable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c36cfdaL);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Variable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c2eL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027744194522");
    b.version(2);
    b.alias("val");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "VarVariable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c345a7bL);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Variable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c2eL);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027744033403");
    b.version(2);
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "Variable", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c2eL);
    b.class_(false, true, false);
    b.super_("dynamicc.structure.Statement", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c312b1bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/4210816027743968302");
    b.version(2);
    b.property("optional", 0x3a6fd2de0c335c31L).type(PrimitiveTypeId.BOOLEAN).origin("4210816027743968305").done();
    b.property("showType", 0x3a6fd2de0c36d378L).type(PrimitiveTypeId.BOOLEAN).origin("4210816027744195448").done();
    b.property("showAssignment", 0x26ea02d22aede35aL).type(PrimitiveTypeId.BOOLEAN).origin("2804056819678176090").done();
    b.associate("type", 0x3a6fd2de0c345a7cL).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c33L).optional(false).origin("4210816027744033404").done();
    b.aggregate("assignment", 0x26ea02d22aedd089L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L).optional(true).ordered(true).multiple(false).origin("2804056819678171273").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableAccess() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("dynamicc", "VariableAccess", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x26ea02d22aef02d4L);
    b.class_(false, false, false);
    b.super_("dynamicc.structure.Expression", 0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c382b34L);
    b.origin("r:0137df68-fadf-4334-b96f-dbc443ca6ded(dynamicc.structure)/2804056819678249684");
    b.version(2);
    b.associate("variable", 0x26ea02d22aef02d5L).target(0xa6d9727f49824bf8L, 0xabdd083fea5126abL, 0x3a6fd2de0c335c2eL).optional(false).origin("2804056819678249685").done();
    return b.create();
  }
}
